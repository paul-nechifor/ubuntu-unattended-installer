#!/bin/bash -e

root="$(cd "$(dirname "$BASH_SOURCE")"; pwd)"


iso_location_dir="http://releases.ubuntu.com/16.04"
iso_name="ubuntu-16.04-desktop-amd64.iso"
iso_file="$root/workdir/downloaded.iso"
image_dir="$root/workdir/image"
new_iso="$root/workdir/new.iso"

main() {
    mkdir -p "$root/workdir"
    check_requirements
    download_image
    extract_image
    change_image
    create_new_iso
}

check_requirements() {
    if ! which 7z &>/dev/null; then
        die "The '7z' command is required in order to extract ISO files."
    fi
}

download_image() {
    if [[ -e "$iso_file" ]]; then
        echo "ISO file exists. Won't download it again."
        return
    fi

    wget "$iso_location_dir/$iso_name" -O"$iso_file"

    echo "Computing checksum..."

    local checksum="$(sha256sum "$iso_file" | awk '{print $1}')"
    local expected_checksums="$(
        wget "$iso_location_dir/SHA256SUMS" -O- 2>/dev/null
    )"

    if ! grep "$checksum" <<< "$expected_checksums" &>/dev/null; then
        die -e "Bad checksum for ISO file: $checksum."
    fi

    echo "Checksum matches."
}

extract_image() {
    if [[ -e "$image_dir" ]]; then
        echo "Deleting the image dir."
        rm -fr "$image_dir"
    fi

    echo "Extracting the image."
    7z x "$iso_file" -o"$image_dir" >/dev/null
}

change_image() {
    echo "Changing the image."
    cp "$root/config/txt.cfg" "$image_dir"/isolinux
    cp "$root/config/my.seed" "$image_dir"/preseed
    cp "$root/config/install.sh" "$image_dir"/
}

create_new_iso() {
    echo "Creating the new ISO image."
    cd "$image_dir"
    local opts=(
        -D
        -r
        -V AUTO_UBUNTU
        -cache-inodes
        -J
        -l
        -b isolinux/isolinux.bin
        -c isolinux/boot.cat
        -no-emul-boot
        -boot-load-size 4
        -boot-info-table
        -quiet
        -o "$new_iso"
        "$image_dir"
    )
    mkisofs "${opts[@]}"
}

die() {
    tput setaf 1
    echo "$@"
    exit 1
}

main "$@"
